import { resolve } from 'path';
import { execSync } from 'child_process';
import { buildInputObject } from './buildUitls';
export function compileNative(config) {
    return async function compile(sources) {
        const command = createBuildCommand(config);
        const input = JSON.stringify(buildInputObject(sources, config.compilerOptions), null, 2);
        return JSON.parse(execSync(command, { input }).toString());
    };
}
export function createBuildCommand(config) {
    const command = 'solc';
    const params = '--standard-json';
    const customAllowedPaths = (config.allowedPaths || []).map((path) => resolve(path));
    const allowedPaths = [resolve(config.sourcesPath), resolve(config.npmPath), ...customAllowedPaths];
    return `${command} ${params} --allow-paths ${allowedPaths.join(',')}`;
}
