import { createMockProvider, getWallets } from './provider';
export const loadFixture = createFixtureLoader();
export function createFixtureLoader(overrideProvider, overrideWallets) {
    const snapshots = [];
    return async function load(fixture) {
        const snapshot = snapshots.find((snapshot) => snapshot.fixture === fixture);
        if (snapshot) {
            await snapshot.provider.send('evm_revert', [snapshot.id]);
            snapshot.id = await snapshot.provider.send('evm_snapshot', []);
            return snapshot.data;
        }
        else {
            const provider = overrideProvider || createMockProvider();
            const wallets = overrideWallets || getWallets(provider);
            const data = await fixture(provider, wallets);
            const id = await provider.send('evm_snapshot', []);
            snapshots.push({ fixture, data, id, provider, wallets });
            return data;
        }
    };
}
