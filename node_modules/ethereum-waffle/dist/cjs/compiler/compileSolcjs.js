"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const solc_1 = __importDefault(require("solc"));
const util_1 = require("util");
const utils_1 = require("../utils");
const buildUitls_1 = require("./buildUitls");
const loadRemoteVersion = util_1.promisify(solc_1.default.loadRemoteVersion);
async function loadCompiler(config) {
    if (config.solcVersion) {
        if (utils_1.isDirectory(config.solcVersion)) {
            return require(utils_1.relativePathToWorkingDir(config.solcVersion));
        }
        return loadRemoteVersion(config.solcVersion);
    }
    return solc_1.default;
}
exports.loadCompiler = loadCompiler;
function compileSolcjs(config) {
    return async function compile(sources, findImports) {
        const solc = await loadCompiler(config);
        const input = buildUitls_1.buildInputObject(sources, config.compilerOptions);
        const output = solc.compile(JSON.stringify(input), findImports);
        return JSON.parse(output);
    };
}
exports.compileSolcjs = compileSolcjs;
function findInputs(files) {
    return Object.assign({}, ...files.map((file) => ({
        [file]: utils_1.readFileContent(file)
    })));
}
exports.findInputs = findInputs;
